import streamlit as st
from streamlit_lottie import st_lottie
import requests
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os
import json
from components.headers import get_main_title, get_intro_highlight, get_section_header
from components.trajectory_viz import display_trajectory_visualization

# Configuraci√≥n de la p√°gina con tema personalizado
st.set_page_config(
    page_title="Predicci√≥n de la Din√°mica del Bal√≠n",
    layout="wide",
    initial_sidebar_state="expanded",
    page_icon="üîÆ"
)

# Cargar CSS desde archivo externo
def load_css(css_file):
    with open(css_file, "r") as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# Cargar nuestro CSS personalizado
load_css("styles/main.css")

# Funci√≥n para cargar animaciones Lottie desde archivo local
def load_lottiefile(filepath):
    with open(filepath, "r") as f:
        return json.load(f)


lottie_neural = load_lottiefile("animations/ai_animated.json")
lottie_chaos = load_lottiefile("animations/chaos.json")  

# Layout con dos columnas principales
col1, col2 = st.columns([2, 1])

with col1:
    # T√≠tulo principal con √≠cono (usando componente)
    st.markdown(get_main_title(), unsafe_allow_html=True)
    st.markdown(get_intro_highlight(), unsafe_allow_html=True)

with col2:
    # Animaci√≥n en la columna derecha
    st_lottie(lottie_neural, height=250, key="ia_animation")

st.markdown("---")

# Secci√≥n 1: Introducci√≥n
st.markdown(get_section_header("1", "üìä", "Introducci√≥n"), unsafe_allow_html=True)

# Crear columnas para el dise√±o
col_left, col_text, col_animation = st.columns([0.1, 2.5, 3])

with col_text:
    # Texto centrado en la columna del medio
    st.markdown("""
    <div class="justified-text margin-top-intro">
    Los sistemas ca√≥ticos, como el movimiento de un bal√≠n bajo la influencia de un campo magn√©tico,
    representan un reto en la predicci√≥n debido a su alta sensibilidad a condiciones iniciales.
    Este proyecto utiliza redes neuronales ‚Äîincluyendo arquitecturas LSTM, GRU y modelos densos‚Äî
    para modelar la din√°mica ca√≥tica a partir de datos experimentales.
    </div>
    """, unsafe_allow_html=True)

with col_animation:
    # Animaci√≥n en la columna derecha
    st_lottie(
        lottie_chaos,
        height=250,
        key="chaos_animation",
        quality="high"
    )

# Secci√≥n 2: Metodolog√≠a con visualizaci√≥n de trayectoria
st.markdown(get_section_header("2", "üîç", "Antecedentes y Planteamiento del Problema"), unsafe_allow_html=True)

antec_text_col, antec_viz_col = st.columns([3, 5])

with antec_text_col:
    st.markdown("""
    <div class="justified-text margin-top-antecedentes">
    La predicci√≥n de trayectorias en sistemas ca√≥ticos es complicada por la naturaleza no lineal y la sensibilidad a las condiciones iniciales. Los m√©todos tradicionales basados en ecuaciones diferenciales tienen limitaciones, lo que ha impulsado el uso de t√©cnicas de machine learning para capturar patrones complejos en datos experimentales.
    El problema se centra en predecir la trayectoria de un bal√≠n, cuyos datos experimentales comprenden 1020 puntos por muestra, con 195 muestras distribuidas en 5 carpetas (12G, 20G, 30G, 50G y 70G) y frecuencias entre 1Hz y 35Hz.
    <br><br>
    En este proyecto, adoptamos un enfoque basado en deep learning, comparando diferentes arquitecturas de redes neuronales.
    </div>
    """, unsafe_allow_html=True)

with antec_viz_col:
    
    display_trajectory_visualization(antec_viz_col)

# Secci√≥n 3: Datos Experimentales (con video a la derecha)
st.markdown(get_section_header("3", "üß™", "Datos Experimentales"), unsafe_allow_html=True)

# Nuevas columnas espec√≠ficas para datos experimentales y video
datos_col, video_col = st.columns([3, 2])

with datos_col:
    st.markdown("""
    <div class="justified-text margin-top-intro">
    Los datos provienen de un experimento f√≠sico controlado y se estructuran de la siguiente forma:
    <ul>
      <li><strong style="color:#4b6cb7;">Total de muestras:</strong> 195 (35 por cada campo magn√©tico).</li>
      <li><strong style="color:#4b6cb7;">Puntos por muestra:</strong> 1020 registros de coordenadas (XM, YM).</li>
      <li><strong style="color:#4b6cb7;">Variables experimentales:</strong> Campo Magn√©tico (12G a 70G) y Frecuencia (1Hz a 35Hz).</li>
    </ul>
    <br>
    El preprocesamiento incluye:
    <ul>
      <li>Lectura y consolidaci√≥n de archivos txt (cada uno con 2 columnas: XM y YM).</li>
      <li>Extracci√≥n de metadatos (campo magn√©tico y frecuencia, a partir del nombre de carpeta y archivo).</li>
      <li>Normalizaci√≥n de los datos con la t√©cnica Min-Max, preservando la forma de la distribuci√≥n.</li>
      <li>Divisi√≥n del dataset en subconjuntos: entrenamiento (70%), validaci√≥n (20%) y prueba (10%).</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)

with video_col:
    # Video y visualizaciones en la columna derecha
    st.markdown("<h3 style='text-align:center; color:#4b6cb7;'>Demo del Experimento</h3>", unsafe_allow_html=True)
    
  
    st.video(
        "video/experimento.mp4",
        format="video/mp4", 
        autoplay=True,
        loop=True,
        start_time=3,
    ) 
    

    with st.expander("‚ÑπÔ∏è M√°s informaci√≥n sobre el experimento"):
        st.markdown("""
        Este video muestra el comportamiento del bal√≠n bajo un campo electromagnetico de 12 G y con una frecuencia de 1Hz.
        El experimento fue realizado utilizando un electroim√°n controlado por corriente alterna,
        permitiendo generar campos magn√©ticos variables con frecuencias programables.
        """)

